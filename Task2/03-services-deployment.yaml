apiVersion: apps/v1
kind: Deployment
metadata:
  name: data-service
  namespace: app-system
spec:
  selector:
    matchLabels:
      app: data-service
  replicas: 1
  template:
    metadata:
      labels:
        app: data-service
    spec:
      containers:
      - name: data-service
        image: hashicorp/http-echo
        args:
        - "-text=Hello from data-service"
        ports:
        - containerPort: 5678
        env:
        - name: MINIO_ACCESS_KEY
          valueFrom:
            secretKeyRef:
              name: data-service-minio-creds
              key: accesskey
        - name: MINIO_SECRET_KEY
          valueFrom:
            secretKeyRef:
              name: data-service-minio-creds
              key: secretkey
        - name: MINIO_ENDPOINT
          value: "http://minio.storage-system:9000"
        resources:
          requests:
            memory: "32Mi"
            cpu: "50m"
          limits:
            memory: "64Mi"
            cpu: "100m"
        livenessProbe:
          httpGet:
            path: /
            port: 5678
          initialDelaySeconds: 10
          periodSeconds: 5
        readinessProbe:
          httpGet:
            path: /
            port: 5678
          initialDelaySeconds: 5
          periodSeconds: 2
---
apiVersion: v1
kind: Service
metadata:
  name: data-service
  namespace: app-system
spec:
  selector:
    app: data-service
  ports:
  - port: 80
    targetPort: 5678
    name: http
  type: ClusterIP

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: auth-service
  namespace: app-system
spec:
  selector:
    matchLabels:
      app: auth-service
  replicas: 1
  template:
    metadata:
      labels:
        app: auth-service
      annotations:
        fluentbit.io/exclude: "true"  # Exclude sensitive logs from being collected
    spec:
      containers:
      - name: auth-service
        image: kennethreitz/httpbin
        env:
        - name: HTTPBIN_SUPPRESS_LOGGING
          value: "true"  # Custom env var to indicate logging should be limited
        - name: HTTPBIN_STRIP_HEADERS
          value: "Authorization,Cookie,X-API-Key"  # Headers to strip from logs
        command: ["/bin/sh", "-c"]
        args:
        - |
          # Override the entrypoint to route logs through a filter
          exec gunicorn -b 0.0.0.0:80 httpbin:app 2>&1 | grep -v "Authorization\|Bearer\|api-key\|password\|secret"
        ports:
        - containerPort: 80
        env:
        - name: MINIO_ACCESS_KEY
          valueFrom:
            secretKeyRef:
              name: auth-service-minio-creds
              key: accesskey
        - name: MINIO_SECRET_KEY
          valueFrom:
            secretKeyRef:
              name: auth-service-minio-creds
              key: secretkey
        - name: MINIO_ENDPOINT
          value: "http://minio.storage-system:9000"
        resources:
          requests:
            memory: "64Mi"
            cpu: "100m"
          limits:
            memory: "128Mi"
            cpu: "200m"
        livenessProbe:
          httpGet:
            path: /status/200
            port: 80
          initialDelaySeconds: 15
          periodSeconds: 5
        readinessProbe:
          httpGet:
            path: /status/200
            port: 80
          initialDelaySeconds: 5
          periodSeconds: 2
---
apiVersion: v1
kind: Service
metadata:
  name: auth-service
  namespace: app-system
spec:
  selector:
    app: auth-service
  ports:
  - port: 80
    targetPort: 80
  type: ClusterIP

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: gateway
  namespace: app-system
spec:
  replicas: 1
  selector:
    matchLabels:
      app: gateway
  template:
    metadata:
      labels:
        app: gateway
    spec:
      containers:
      - name: gateway
        image: nginxdemos/hello
        ports:
        - containerPort: 80
        resources:
          requests:
            memory: "64Mi"
            cpu: "100m"
          limits:
            memory: "128Mi"
            cpu: "200m"
        livenessProbe:
          httpGet:
            path: /
            port: 80
          initialDelaySeconds: 10
          periodSeconds: 5
        readinessProbe:
          httpGet:
            path: /
            port: 80
          initialDelaySeconds: 5
          periodSeconds: 2
---
apiVersion: v1
kind: Service
metadata:
  name: gateway
  namespace: app-system
spec:
  selector:
    app: gateway
  ports:
  - port: 80
    targetPort: 80
  type: ClusterIP
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: gateway-ingress
  namespace: app-system
  annotations:
    nginx.ingress.kubernetes.io/rewrite-target: /
spec:
  rules:
  - http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: gateway
            port:
              number: 80
